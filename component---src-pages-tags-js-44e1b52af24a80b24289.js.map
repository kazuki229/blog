{"version":3,"sources":["webpack:///./src/pages/tags.js"],"names":["TagsPage","data","group","allMarkdownRemark","title","site","siteMetadata","map","tag","key","fieldValue","to","kebabCase","totalCount","pageQuery"],"mappings":"2FAAA,uHAqDeA,UA3CE,SAAC,GAAD,QACbC,KACyBC,EAFZ,EAETC,kBAAqBD,MAEDE,EAJX,EAGTC,KACIC,aAAgBF,MAJX,OAQT,6BACI,kBAAC,SAAD,CAAQA,MAAOA,IACf,6BACI,oCACA,4BACKF,EAAMK,KAAI,SAAAC,GAAG,OACV,wBAAIC,IAAKD,EAAIE,YACT,kBAAC,OAAD,CAAMC,GAAE,SAAWC,IAAUJ,EAAIE,YAAzB,KACHF,EAAIE,WADT,KACuBF,EAAIK,WAD3B,aA8BrB,IAAMC,EAAS","file":"component---src-pages-tags-js-44e1b52af24a80b24289.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\n\n// Utilities\nimport kebabCase from \"lodash/kebabCase\"\n\n// Components\nimport { Helmet } from \"react-helmet\"\nimport { Link, graphql } from \"gatsby\"\n\nconst TagsPage = ({\n    data: {\n        allMarkdownRemark: { group },\n        site: {\n            siteMetadata: { title },\n        },\n    },\n}) => (\n        <div>\n            <Helmet title={title} />\n            <div>\n                <h1>Tags</h1>\n                <ul>\n                    {group.map(tag => (\n                        <li key={tag.fieldValue}>\n                            <Link to={`/tags/${kebabCase(tag.fieldValue)}/`}>\n                                {tag.fieldValue} ({tag.totalCount})\n            </Link>\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        </div>\n    )\n\nTagsPage.propTypes = {\n    data: PropTypes.shape({\n        allMarkdownRemark: PropTypes.shape({\n            group: PropTypes.arrayOf(\n                PropTypes.shape({\n                    fieldValue: PropTypes.string.isRequired,\n                    totalCount: PropTypes.number.isRequired,\n                }).isRequired\n            ),\n        }),\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                title: PropTypes.string.isRequired,\n            }),\n        }),\n    }),\n}\n\nexport default TagsPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(limit: 2000) {\n      group(field: frontmatter___tags) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`\n"],"sourceRoot":""}