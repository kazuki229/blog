{"version":3,"sources":["webpack:///./src/components/taglist.js","webpack:///./src/components/share.jsx","webpack:///./src/templates/blog-post.js"],"names":["TagList","tags","style","display","flexWrap","map","tag","background","padding","borderRadius","margin","key","to","kebabCase","boxShadow","textDecoration","color","Share","className","href","data-show-count","data-href","data-layout","data-size","target","Helmet","id","async","defer","crossorigin","src","nonce","data-hatena-bookmark-layout","data-hatena-bookmark-lang","title","alt","width","height","border","charSet","pageQuery","BlogPostTemplate","data","pageContext","location","post","markdownRemark","previous","next","frontmatter","description","excerpt","marginTop","rhythm","marginBottom","scale","date","dangerouslySetInnerHTML","__html","html","justifyContent","listStyle","fields","slug","rel"],"mappings":"2FAAA,0DAsCeA,IAlCC,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACf,OACI,yBACIC,MAAO,CACHC,QAAQ,OACRC,SAAS,SAGZH,EAAKI,KAAI,SAAAC,GAAG,OACT,yBACIJ,MAAO,CACHK,WAAY,UACZC,QAAS,WACTC,aAAc,MACdC,OAAQ,eAEZC,IAAKL,GAEL,kBAAC,OAAD,CACIM,GAAE,SAAWC,IAAUP,GACvBJ,MAAO,CACHY,UAAW,OACXC,eAAgB,OAChBC,MAAO,YAGVV,U,wKCmCVW,EA9DD,WACV,OACI,yBAAKC,UAAU,eACX,uBACIC,KAAK,gDACLD,UAAU,uBACVE,kBAAgB,SAEpB,yBACIF,UAAU,kBACVG,YACA,mCACAC,cAAY,eACZC,YAAU,SAEV,uBACIC,OAAO,SACPL,KAAK,wGACLD,UAAU,yBAHd,QAQJ,kBAACO,EAAA,OAAD,KACI,yBAAKC,GAAG,YACR,4BACIC,MAAM,QACNC,MAAM,QACNC,YAAY,YACZC,IAAI,oFACJC,MAAM,cAGd,uBACIZ,KAAK,gCACLD,UAAU,sCACVc,8BAA4B,sBAC5BC,4BAA0B,KAC1BC,MAAM,wBAEN,yBACIJ,IAAI,2EACJK,IAAI,uBACJC,MAAM,KACNC,OAAO,KACPnC,MAAO,CACHoC,OAAO,WAInB,kBAACb,EAAA,OAAD,KACI,4BACIE,MAAM,QACNG,IAAI,gDACJS,QAAQ,a,YCyBfC,GAFEC,UAtEU,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SACvCC,EAAOH,EAAKI,eACVC,EAAmBJ,EAAnBI,SAAUC,EAASL,EAATK,KAElB,OACE,kBAAC,IAAD,CAAQJ,SAAUA,GAChB,kBAAC,IAAD,CACEV,MAAOW,EAAKI,YAAYf,MACxBgB,YAAaL,EAAKI,YAAYC,aAAeL,EAAKM,UAEpD,iCACE,gCACE,wBACEjD,MAAO,CACLkD,UAAWC,YAAO,GAClBC,aAAc,IAGfT,EAAKI,YAAYf,OAEpB,uBACEhC,MAAK,iBACAqD,aAAM,IADN,CAEHpD,QAAQ,QACRmD,aAAcD,YAAO,MAGtBR,EAAKI,YAAYO,MAEpB,kBAAC,IAAD,CAASvD,KAAM4C,EAAKI,YAAYhD,OAChC,kBAAC,EAAD,OAEF,6BAASwD,wBAAyB,CAAEC,OAAQb,EAAKc,QACjD,wBACEzD,MAAO,CACLoD,aAAcD,YAAO,OAK3B,6BACE,wBACEnD,MAAO,CACLC,QAAQ,OACRC,SAAS,OACTwD,eAAe,gBACfC,UAAU,OACVrD,QAAS,IAGX,4BACGuC,GACC,kBAAC,OAAD,CAAMnC,GAAImC,EAASe,OAAOC,KAAMC,IAAI,QAApC,KACKjB,EAASE,YAAYf,QAI9B,4BACGc,GACC,kBAAC,OAAD,CAAMpC,GAAIoC,EAAKc,OAAOC,KAAMC,IAAI,QAC7BhB,EAAKC,YAAYf,MADpB,WAaQ","file":"component---src-templates-blog-post-js-4e8c2456fe70c2bca209.js","sourcesContent":["import React from \"react\"\nimport kebabCase from \"lodash/kebabCase\"\nimport { Link } from \"gatsby\"\n\nconst TagList = ({ tags }) => {\n    return (\n        <div\n            style={{\n                display: `flex`,\n                flexWrap: `wrap`,\n            }}\n        >\n            {tags.map(tag =>\n                <div\n                    style={{\n                        background: \"#f1fa8c\",\n                        padding: \"5px 10px\",\n                        borderRadius: \"5px\",\n                        margin: \"4px 4px 0 0\",\n                    }}\n                    key={tag}\n                >\n                    <Link\n                        to={`/tags/${kebabCase(tag)}`}\n                        style={{\n                            boxShadow: \"none\",\n                            textDecoration: \"none\",\n                            color: \"#44475a\",\n                        }}\n                    >\n                        {tag}\n                    </Link>\n                </div>\n            )}\n        </div>\n    )\n}\n\nexport default TagList\n","import React from 'react';\nimport { Helmet } from \"react-helmet\"\n\nconst Share = () => {\n    return (\n        <div className=\"post-social\">\n            <a\n                href=\"https://twitter.com/share?ref_src=twsrc%5Etfw\"\n                className=\"twitter-share-button\"\n                data-show-count=\"true\"\n            ></a>\n            <div\n                className=\"fb-share-button\"\n                data-href=\n                \"https://kazuki229.github.io/blog\"\n                data-layout=\"button_count\"\n                data-size=\"small\"\n            >\n                <a\n                    target=\"_blank\"\n                    href=\"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fkazuki229.github.io%2Fblog&amp;src=sdkpreparse\"\n                    className=\"fb-xfbml-parse-ignore\"\n                >\n                    シェア\n                </a>\n            </div>\n            <Helmet>\n                <div id=\"fb-root\"></div>\n                <script\n                    async=\"async\"\n                    defer=\"defer\"\n                    crossorigin=\"anonymous\"\n                    src=\"https://connect.facebook.net/ja_JP/sdk.js#xfbml=1&autoLogAppEvents=1&version=v7.0\"\n                    nonce=\"WJmnSGmS\">\n                </script>\n            </Helmet>\n            <a\n                href=\"https://b.hatena.ne.jp/entry/\"\n                className=\"hatena-bookmark-button share-button\"\n                data-hatena-bookmark-layout=\"basic-label-counter\"\n                data-hatena-bookmark-lang=\"ja\"\n                title=\"このエントリーをはてなブックマークに追加\"\n            >\n                <img\n                    src=\"https://b.st-hatena.com/images/v4/public/entry-button/button-only@2x.png\"\n                    alt=\"このエントリーをはてなブックマークに追加\"\n                    width=\"20\"\n                    height=\"20\"\n                    style={{\n                        border: `none`,\n                    }}\n                />\n            </a>\n            <Helmet>\n                <script\n                    async=\"async\"\n                    src=\"https://b.st-hatena.com/js/bookmark_button.js\"\n                    charSet=\"utf-8\"\n                >\n                </script>\n            </Helmet>\n        </div>\n    )\n};\n\nexport default Share;\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport TagList from \"../components/taglist\"\nimport Share from \"../components/share\"\n\nimport { rhythm, scale } from \"../utils/typography\"\n\nconst BlogPostTemplate = ({ data, pageContext, location }) => {\n  const post = data.markdownRemark\n  const { previous, next } = pageContext\n\n  return (\n    <Layout location={location}>\n      <SEO\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <article>\n        <header>\n          <h1\n            style={{\n              marginTop: rhythm(1),\n              marginBottom: 0,\n            }}\n          >\n            {post.frontmatter.title}\n          </h1>\n          <p\n            style={{\n              ...scale(-1 / 5),\n              display: `block`,\n              marginBottom: rhythm(1),\n            }}\n          >\n            {post.frontmatter.date}\n          </p>\n          <TagList tags={post.frontmatter.tags} />\n          <Share />\n        </header>\n        <section dangerouslySetInnerHTML={{ __html: post.html }} />\n        <hr\n          style={{\n            marginBottom: rhythm(1),\n          }}\n        />\n      </article>\n\n      <nav>\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout >\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        tags\n      }\n    }\n  }\n`\n"],"sourceRoot":""}