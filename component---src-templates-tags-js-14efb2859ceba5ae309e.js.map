{"version":3,"sources":["webpack:///./src/components/shortpost.js","webpack:///./src/templates/tags.js","webpack:///./src/components/taglist.js"],"names":["ShortPost","slug","title","date","description","tags","key","style","marginTop","boxShadow","to","dangerouslySetInnerHTML","__html","Tags","pageContext","data","tag","edges","allMarkdownRemark","location","map","node","fields","frontmatter","pageQuery","TagList","display","flexWrap","background","padding","borderRadius","margin","kebabCase","textDecoration","color"],"mappings":"8FAAA,iDAgCeA,IA5BG,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,KAAMC,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KACjD,OACI,6BAASC,IAAKL,GACV,gCACI,wBACIM,MAAO,CACHC,UAAW,IAIf,kBAAC,OAAD,CAAMD,MAAO,CAAEE,UAAU,QAAWC,GAAIT,GACnCC,IAGT,+BAAQC,GACR,kBAAC,IAAD,CAASE,KAAMA,KAEnB,iCACI,uBACIM,wBAAyB,CACrBC,OAAQR,S,kCCxBhC,0HA0DeS,UAjDF,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KACjBC,EAAQF,EAARE,IACFC,EAAQF,EAAKG,kBAAkBD,MAErC,OACI,kBAAC,IAAD,CAAQE,SAAUH,GACd,kBAAC,IAAD,CAAKd,MAAM,cACX,4BAAKc,EAAL,aACCC,EAAMG,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACV,OAAQ,kBAAC,IAAD,CACJpB,KAAMoB,EAAKC,OAAOrB,KAClBC,MAAOmB,EAAKE,YAAYrB,MACxBC,KAAMkB,EAAKE,YAAYpB,KACvBC,YAAaiB,EAAKE,YAAYnB,YAC9BC,KAAMgB,EAAKE,YAAYlB,KACvBC,IAAKe,EAAKC,OAAOrB,YAoC9B,IAAMuB,EAAS,c,kCC5DtB,0DAsCeC,IAlCC,SAAC,GAAc,IAAZpB,EAAW,EAAXA,KACf,OACI,yBACIE,MAAO,CACHmB,QAAQ,OACRC,SAAS,SAGZtB,EAAKe,KAAI,SAAAJ,GAAG,OACT,yBACIT,MAAO,CACHqB,WAAY,UACZC,QAAS,WACTC,aAAc,MACdC,OAAQ,eAEZzB,IAAKU,GAEL,kBAAC,OAAD,CACIN,GAAE,SAAWsB,IAAUhB,GACvBT,MAAO,CACHE,UAAW,OACXwB,eAAgB,OAChBC,MAAO,YAGVlB","file":"component---src-templates-tags-js-14efb2859ceba5ae309e.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\nimport TagList from \"../components/taglist\"\n\nconst ShortPost = ({ slug, title, date, description, tags }) => {\n    return (\n        <article key={slug}>\n            <header>\n                <h3\n                    style={{\n                        marginTop: 0,\n\n                    }}\n                >\n                    <Link style={{ boxShadow: `none` }} to={slug}>\n                        {title}\n                    </Link>\n                </h3>\n                <small>{date}</small>\n                <TagList tags={tags} />\n            </header>\n            <section>\n                <p\n                    dangerouslySetInnerHTML={{\n                        __html: description,\n                    }}\n                />\n            </section>\n        </article>\n    )\n}\n\nexport default ShortPost\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\n// Components\nimport { Link, graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport ShortPost from \"../components/shortpost\"\n\nconst Tags = ({ pageContext, data }) => {\n    const { tag } = pageContext\n    const edges = data.allMarkdownRemark.edges\n\n    return (\n        <Layout location={tag}>\n            <SEO title=\"All posts\" />\n            <h2>{tag}に関連する記事一覧</h2>\n            {edges.map(({ node }) => {\n                return (<ShortPost\n                    slug={node.fields.slug}\n                    title={node.frontmatter.title}\n                    date={node.frontmatter.date}\n                    description={node.frontmatter.description}\n                    tags={node.frontmatter.tags}\n                    key={node.fields.slug}\n                />)\n            })}\n        </Layout >\n    )\n}\n\nTags.propTypes = {\n    pageContext: PropTypes.shape({\n        tag: PropTypes.string.isRequired,\n    }),\n    data: PropTypes.shape({\n        allMarkdownRemark: PropTypes.shape({\n            edges: PropTypes.arrayOf(\n                PropTypes.shape({\n                    node: PropTypes.shape({\n                        frontmatter: PropTypes.shape({\n                            title: PropTypes.string.isRequired,\n                            date: PropTypes.string.isRequired,\n                            description: PropTypes.string.isRequired,\n                            tags: PropTypes.arrayOf(\n                                PropTypes.string.isRequired\n                            ).isRequired\n                        }),\n                        fields: PropTypes.shape({\n                            slug: PropTypes.string.isRequired,\n                        }),\n                    }),\n                }).isRequired\n            ),\n        }),\n    }),\n}\n\nexport default Tags\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n            description\n            tags\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport kebabCase from \"lodash/kebabCase\"\nimport { Link } from \"gatsby\"\n\nconst TagList = ({ tags }) => {\n    return (\n        <div\n            style={{\n                display: `flex`,\n                flexWrap: `wrap`,\n            }}\n        >\n            {tags.map(tag =>\n                <div\n                    style={{\n                        background: \"#f1fa8c\",\n                        padding: \"5px 10px\",\n                        borderRadius: \"5px\",\n                        margin: \"4px 4px 0 0\",\n                    }}\n                    key={tag}\n                >\n                    <Link\n                        to={`/tags/${kebabCase(tag)}`}\n                        style={{\n                            boxShadow: \"none\",\n                            textDecoration: \"none\",\n                            color: \"#44475a\",\n                        }}\n                    >\n                        {tag}\n                    </Link>\n                </div>\n            )}\n        </div>\n    )\n}\n\nexport default TagList\n"],"sourceRoot":""}